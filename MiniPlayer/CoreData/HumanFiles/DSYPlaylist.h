#import "_DSYPlaylist.h"

/**
 The DSYPlaylist, a subclass of the _DSYPlaylist (a private NSManagedObject subclass generated by Mogenerator using the Model.xcdatamodeld - See the 'Run Mogenerator' target), provides a Core Data class that represents a playlist from the Beats Music API. This class contains class methods to directly import the JSON parsed NSDictionary and NSArray representations of a playlist directly from the API.
 */
@interface DSYPlaylist : _DSYPlaylist {}

#pragma mark - Properties
///-----------------------------------------------------------
/// @name Properties
///-----------------------------------------------------------

/**
 A BOOL indicating whether this is a group type of DSYPlaylist. You can manually set this to YES if you'd like to create a DSYPlaylist to serve as a group cell in an NSTableView.
 */
@property (nonatomic,assign) BOOL isGroup;

#pragma mark - Class Initializers
///-----------------------------------------------------------
/// @name Class Initializers
///-----------------------------------------------------------

/**
 Creates a DSYPlaylist using an NSDictionary representation of the playlist. Will try to parse the dictionary for keys = access, created_at, description, duration, id, name, parental_advisory, total_subscribers, total_tracks, type, updated_at, and user_display_name. This method will first load the DSYPlaylist if it already exists in the Core Data store and will only update the key-value information if a local playlist with the same id is present.
 @param dictionary An NSDictionary with the following keys: access, created_at, description, duration, id, name, parental_advisory, total_subscribers, total_tracks, type, updated_at, and user_display_name.
 @return A DSYPlaylist created using the input NSDictionary.
 */
+(DSYPlaylist *)playlistWithDictionary:(NSDictionary *)dictionary;

/**
 Creates an NSArray of DSYPlaylist objects using an NSArray containing NSDictionary objects. For each NSDictionary this will try to parse for keys = access, created_at, description, duration, id, name, parental_advisory, total_subscribers, total_tracks, type, updated_at, and user_display_name. For each playlist, this method will first load the DSYPlaylist if it already exists in the Core Data store and will only update the key-value information if a local playlist with the same id is present.
 @param dictionaries An NSArray containing the NSDictionary objects, each containing the keys: artist_display_name, canonical, duration, edited_version, essential, id, parental_advisory, popularity, rating, release_date, release_format, streamable, title, total_companion_playlists, total_tracks, and type.
 @return An NSArray of DSYPlaylist objects created using the input NSArray of NSDictionary objects.
 */
+(NSArray *)playlistsWithDictionaries:(NSArray *)dictionaries;

@end
